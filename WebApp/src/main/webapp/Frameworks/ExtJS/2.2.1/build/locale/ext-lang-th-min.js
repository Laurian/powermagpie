Ext.UpdateManager.defaults.indicatorText='<div class="loading-indicator">Â¡Ã“Ã…Ã‘Â§Ã¢Ã‹Ã…Å½...</div>';if(Ext.View){Ext.View.prototype.emptyText=""}if(Ext.grid.GridPanel){Ext.grid.GridPanel.prototype.ddText="{0} Ã Ã…Ã—Ã?Â¡Ã¡Ã…Ã©Ã‡Â·Ã‘Ã©Â§Ã‹Ã?Å½Ã¡Â¶Ã‡"}if(Ext.TabPanelItem){Ext.TabPanelItem.prototype.closeText="Â»Ã”Å½Ã¡Â·Ã§ÂºÂ¹Ã•Ã©"}if(Ext.form.Field){Ext.form.Field.prototype.invalidText="â‚¬Ã¨Ã’Â¢Ã?Â§ÂªÃ¨Ã?Â§Â¹Ã•Ã©Ã¤Ã?Ã¨Â¶Ã™Â¡ÂµÃ©Ã?Â§"}if(Ext.LoadMask){Ext.LoadMask.prototype.msg="Â¡Ã“Ã…Ã‘Â§Ã¢Ã‹Ã…Å½..."}Date.monthNames=["Ã?Â¡ÃƒÃ’â‚¬Ã?","Â¡Ã˜Ã?Å¸Ã’Ã“Å¸Ã‘Â¹Å¾Ã¬","Ã?Ã•Â¹Ã’â‚¬Ã?","Ã Ã?Ã‰Ã’Ã‚Â¹","Å¸Ã„Ã‰Ã€Ã’â‚¬Ã?","Ã?Ã”Â¶Ã˜Â¹Ã’Ã‚Â¹","Â¡Ã„Â¡Â¯Ã’â‚¬Ã?","ÃŠÃ”Â§Ã‹Ã’â‚¬Ã?","Â¡Ã‘Â¹Ã‚Ã’Ã‚Â¹","ÂµÃ˜Ã…Ã’â‚¬Ã?","Å¸Ã„ÃˆÅ¡Ã”Â¡Ã’Ã‚Â¹","Å¾Ã‘Â¹Ã‡Ã’â‚¬Ã?"];Date.getShortMonthName=function(a){return Date.monthNames[a].substring(0,3)};Date.monthNumbers={"Ã?â‚¬":0,"Â¡Å¸":1,"Ã?Ã•â‚¬":2,"Ã Ã?Ã‚":3,"Å¸â‚¬":4,"Ã?Ã”Ã‚":5,"Â¡â‚¬":6,"ÃŠâ‚¬":7,"Â¡Ã‚":8,"Âµâ‚¬":9,"Å¸Ã‚":10,"Å¾â‚¬":11};Date.getMonthNumber=function(a){return Date.monthNumbers[a.substring(0,1).toUpperCase()+a.substring(1,3).toLowerCase()]};Date.dayNames=["Ã?Ã’Â·Ã”ÂµÃ‚Ã¬","Å¡Ã‘Â¹Â·ÃƒÃ¬","Ã?Ã‘Â§â‚¬Ã’Ãƒ","Å¸Ã˜Ã—Å¾","Å¸Ã„Ã‹Ã‘ÃŠÂºÅ½Ã•","ÃˆÃ˜Â¡ÃƒÃ¬","Ã ÃŠÃ’ÃƒÃ¬"];Date.getShortDayName=function(a){return Date.dayNames[a].substring(0,3)};if(Ext.MessageBox){Ext.MessageBox.buttonText={ok:"ÂµÂ¡Ã…Â§",cancel:"Ã‚Â¡Ã Ã…Ã”Â¡",yes:"Ã£ÂªÃ¨",no:"Ã¤Ã?Ã¨Ã£ÂªÃ¨"}}if(Ext.util.Format){Ext.util.Format.date=function(a,b){if(!a){return""}if(!(a instanceof Date)){a=new Date(Date.parse(a))}return a.dateFormat(b||"m/d/Y")}}if(Ext.DatePicker){Ext.apply(Ext.DatePicker.prototype,{todayText:"Ã‡Ã‘Â¹Â¹Ã•Ã©",minText:"This date is before the minimum date",maxText:"This date is after the maximum date",disabledDaysText:"",disabledDatesText:"",monthNames:Date.monthNames,dayNames:Date.dayNames,nextText:"Ã Å½Ã—Ã?Â¹Â¶Ã‘Å½Ã¤Â» (Control+Right)",prevText:"Ã Å½Ã—Ã?Â¹Â¡Ã¨Ã?Â¹Ã‹Â¹Ã©Ã’ (Control+Left)",monthYearText:"Ã Ã…Ã—Ã?Â¡Ã Å½Ã—Ã?Â¹ (Control+Up/Down to move years)",todayTip:"{0} (Spacebar)",format:"m/d/y",okText:"&#160;ÂµÂ¡Ã…Â§&#160;",cancelText:"Ã‚Â¡Ã Ã…Ã”Â¡",startDay:0})}if(Ext.PagingToolbar){Ext.apply(Ext.PagingToolbar.prototype,{beforePageText:"Ã‹Â¹Ã©Ã’",afterPageText:"of {0}",firstText:"Ã‹Â¹Ã©Ã’Ã¡ÃƒÂ¡",prevText:"Â¡Ã¨Ã?Â¹Ã‹Â¹Ã©Ã’",nextText:"Â¶Ã‘Å½Ã¤Â»",lastText:"Ã‹Â¹Ã©Ã’ÃŠÃ˜Å½Â·Ã©Ã’Ã‚",refreshText:"ÃƒÃ•Ã Â¿ÃƒÂª",displayMsg:"Â¡Ã“Ã…Ã‘Â§Ã¡ÃŠÅ½Â§ {0} - {1} Å¡Ã’Â¡ {2}",emptyMsg:"Ã¤Ã?Ã¨Ã?Ã•Â¢Ã©Ã?Ã?Ã™Ã…Ã¡ÃŠÅ½Â§"})}if(Ext.form.TextField){Ext.apply(Ext.form.TextField.prototype,{minLengthText:"The minimum length for this field is {0}",maxLengthText:"The maximum length for this field is {0}",blankText:"This field is required",regexText:"",emptyText:null})}if(Ext.form.NumberField){Ext.apply(Ext.form.NumberField.prototype,{minText:"The minimum value for this field is {0}",maxText:"The maximum value for this field is {0}",nanText:"{0} is not a valid number"})}if(Ext.form.DateField){Ext.apply(Ext.form.DateField.prototype,{disabledDaysText:"Â»Ã”Å½",disabledDatesText:"Â»Ã”Å½",minText:"The date in this field must be after {0}",maxText:"The date in this field must be before {0}",invalidText:"{0} is not a valid date - it must be in the format {1}",format:"m/d/y",altFormats:"m/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d"})}if(Ext.form.ComboBox){Ext.apply(Ext.form.ComboBox.prototype,{loadingText:"Â¡Ã“Ã…Ã‘Â§Ã¢Ã‹Ã…Å½...",valueNotFoundText:undefined})}if(Ext.form.VTypes){Ext.apply(Ext.form.VTypes,{emailText:'This field should be an e-mail address in the format "user@domain.com"',urlText:'This field should be a URL in the format "http://www.domain.com"',alphaText:"This field should only contain letters and _",alphanumText:"This field should only contain letters, numbers and _"})}if(Ext.form.HtmlEditor){Ext.apply(Ext.form.HtmlEditor.prototype,{createLinkText:"Please enter the URL for the link:",buttonTips:{bold:{title:"Bold (Ctrl+B)",text:"Make the selected text bold.",cls:"x-html-editor-tip"},italic:{title:"Italic (Ctrl+I)",text:"Make the selected text italic.",cls:"x-html-editor-tip"},underline:{title:"Underline (Ctrl+U)",text:"Underline the selected text.",cls:"x-html-editor-tip"},increasefontsize:{title:"Grow Text",text:"Increase the font size.",cls:"x-html-editor-tip"},decreasefontsize:{title:"Shrink Text",text:"Decrease the font size.",cls:"x-html-editor-tip"},backcolor:{title:"Text Highlight Color",text:"Change the background color of the selected text.",cls:"x-html-editor-tip"},forecolor:{title:"Font Color",text:"Change the color of the selected text.",cls:"x-html-editor-tip"},justifyleft:{title:"Align Text Left",text:"Align text to the left.",cls:"x-html-editor-tip"},justifycenter:{title:"Center Text",text:"Center text in the editor.",cls:"x-html-editor-tip"},justifyright:{title:"Align Text Right",text:"Align text to the right.",cls:"x-html-editor-tip"},insertunorderedlist:{title:"Bullet List",text:"Start a bulleted list.",cls:"x-html-editor-tip"},insertorderedlist:{title:"Numbered List",text:"Start a numbered list.",cls:"x-html-editor-tip"},createlink:{title:"Hyperlink",text:"Make the selected text a hyperlink.",cls:"x-html-editor-tip"},sourceedit:{title:"Source Edit",text:"Switch to source editing mode.",cls:"x-html-editor-tip"}}})}if(Ext.grid.GridView){Ext.apply(Ext.grid.GridView.prototype,{sortAscText:"Sort Ascending",sortDescText:"Sort Descending",lockText:"Lock Column",unlockText:"Unlock Column",columnsText:"Columns"})}if(Ext.grid.GroupingView){Ext.apply(Ext.grid.GroupingView.prototype,{emptyGroupText:"(None)",groupByText:"Group By This Field",showGroupsText:"Show in Groups"})}if(Ext.grid.PropertyColumnModel){Ext.apply(Ext.grid.PropertyColumnModel.prototype,{nameText:"Name",valueText:"Value",dateFormat:"m/j/Y"})}if(Ext.layout.BorderLayout&&Ext.layout.BorderLayout.SplitRegion){Ext.apply(Ext.layout.BorderLayout.SplitRegion.prototype,{splitTip:"Drag to resize.",collapsibleSplitTip:"Drag to resize. Double click to hide."})};